---
- name: Set configuration parameters in /boot/firmware/config.txt
  ansible.builtin.lineinfile:
    line: "{{ item.line }}"
    regexp: "{{ item.regexp }}"
    path: /boot/firmware/config.txt
    create: true
    state: present
    insertafter: "^\\[all\\]"
  loop:
    #- line: 'dtparam=audio=off'
    - line: "dtparam=audio=on"
      regexp: "^dtparam=audio="
    #- line: 'dtoverlay=vc4-kms-v3d,noaudio'
    - line: "dtoverlay=vc4-kms-v3d"
      regexp: "^dtoverlay=vc4-kms-v3d"
  notify: Reboot
  tags: firmware

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
  tags: firmware

- name: Install essential audio utilities
  ansible.builtin.package:
    name: "{{ item }}"
    state: latest
  loop:
    - alsa-utils
    - pulseaudio
    - pulseaudio-utils
    - ladspa-sdk
    - swh-plugins
    - tap-plugins
    - at

- name: Set real-time audio processing limits
  ansible.builtin.blockinfile:
    path: /etc/security/limits.conf
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR AUDIO"
    block: |
      @audio   -  rtprio     99
      @audio   -  memlock    unlimited
      @audio   -  nice       -19

## Alsa Configuration

- name: Remove /etc/asound.conf
  ansible.builtin.file:
    path: /etc/asound.conf
    state: absent
  tags: alsa

- name: Copy /etc/asound.docker.conf
  ansible.builtin.template:
    src: asound.docker.conf
    dest: /etc/asound.docker.conf
  tags: alsa

## PulseAudio configuration

- name: Create pulse user and add to audio group
  ansible.builtin.user:
    name: pulse
    home: /var/run/pulse
    groups: audio
    state: present
    append: true
    shell: /usr/sbin/nologin
  tags: pulse

- name: Add users to pulse-access group
  ansible.builtin.user:
    name: "{{ item }}"
    groups:
      - pulse
      - pulse-access
    append: true
  loop:
    - root
    - daniel

- name: Copy /etc/pulse/system.pa
  ansible.builtin.template:
    src: system.pa
    dest: /etc/pulse/system.pa
  notify: Restart PulseAudio
  tags: pulse

- name: Touch /etc/pulse/client.conf to ensure it is not empty
  ansible.builtin.file:
    path: /etc/pulse/client.conf
    state: touch
  tags: pulse

- name: Ensure autospawn is set to no in client.conf
  ansible.builtin.lineinfile:
    path: /etc/pulse/client.conf
    regexp: "^[#;]*\\s*autospawn="
    line: "autospawn=no"
    state: present
  notify: Restart PulseAudio
  tags: pulse

#- name: Deploy daemon.conf for PulseAudio
#  template:
#    src: daemon.conf
#    dest: /etc/pulse/daemon.conf
#    mode: '0644'
#  notify: Restart PulseAudio
#  tags: pulse

## Udev configuration

- name: Copy udev scripts
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    owner: root
    group: root
    mode: "0755"
  loop:
    - jabra_connected.sh
    - jabra_connected_wrapper.sh
  tags: udev

- name: Create udev rule for Jabra Speak 510
  ansible.builtin.copy:
    src: 99-jabra.rules
    dest: /etc/udev/rules.d/99-jabra.rules
    owner: root
    group: root
    mode: "0644"
  notify:
    - Reload udev
    - Trigger udev
  tags: udev

## PulseAudio configuration (systemd)

- name: Disable global PulseAudio services and sockets
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: false
    scope: global
  loop:
    - pulseaudio.service
    - pulseaudio.socket
  tags: systemd

- name: Create PulseAudio system service
  ansible.builtin.copy:
    dest: /etc/systemd/system/pulseaudio.service
    content: |
      [Unit]
      Description=PulseAudio system server

      [Service]
      Type=notify
      ExecStart=pulseaudio --daemonize=no --system --realtime --log-target=journal
      Restart=always
      RestartSec=5s

      [Install]
      WantedBy=multi-user.target
    mode: "0644"
    owner: root
    group: root
  notify:
    - Reload systemd
    - Restart PulseAudio
  tags:
    - systemd

- name: Enable pulseaudio service
  ansible.builtin.systemd:
    name: pulseaudio.service
    enabled: true
  notify: Restart PulseAudio

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
  tags:
    - pulse
    - udev
    - systemd

## Stack

- name: Clone git repositories
  ansible.builtin.git:
    repo: "https://github.com/rhasspy/{{ item }}.git"
    dest: "/tmp/{{ item }}"
  loop: "{{ wyoming_audio_repos }}"
  tags: stack

- name: Build the Docker images
  community.docker.docker_image:
    name: "{{ item }}"
    build:
      path: /tmp/{{ item }}
    source: build
    tag: latest
    force_source: true
  loop: "{{ wyoming_audio_repos }}"
  tags: stack

- name: Ensure destination directories exist
  ansible.builtin.file:
    path: "/tmp/{{ item }}-extras"
    state: directory
  loop: "{{ wyoming_audio_repos }}"
  tags: stack

- name: Copy Dockerfiles
  ansible.builtin.copy:
    src: Dockerfile.{{ item }}
    dest: /tmp/{{ item }}-extras/Dockerfile
  loop: "{{ wyoming_audio_repos }}"
  tags: stack

- name: Build extras images
  community.docker.docker_image:
    name: "{{ item }}-extras"
    source: build
    build:
      path: "/tmp/{{ item }}-extras/"
    tag: latest
    force_source: true
  loop: "{{ wyoming_audio_repos }}"
  tags: stack

- name: Start wyoming stack
  community.docker.docker_compose_v2:
    project_name: "sattelite-audio-{{ item.name }}"
    definition:
      services:
        snd-external:
          image: wyoming-snd-external-extras:latest
          restart: unless-stopped
          container_name: "wyoming-snd-external-{{ item.name }}"
          volumes:
            - /run/dbus:/run/dbus:ro
            - /etc/asound.docker.conf:/etc/asound.conf:ro
            - /var/run/pulse:/var/run/pulse
          devices:
            - /dev/snd:/dev/snd
          environment:
            PULSE_SERVER: "unix:/var/run/pulse/native"
            PULSE_SINK: "{{ item.sink | default(omit) }}"
          group_add:
            - audio
          ports:
            - "{{ item.snd_port }}:10601"
          command:
            - "--device"
            - "pulse"
            - "--debug"
        mic-external:
          image: wyoming-mic-external-extras:latest
          restart: unless-stopped
          container_name: "wyoming-mic-external-{{ item.name }}"
          volumes:
            - /run/dbus:/run/dbus:ro
            - /etc/asound.docker.conf:/etc/asound.conf:ro
            - /var/run/pulse:/var/run/pulse
          devices:
            - /dev/snd:/dev/snd
          environment:
            PULSE_SERVER: "unix:/var/run/pulse/native"
          group_add:
            - audio
          ports:
            - "{{ item.mic_port }}:10600"
          command:
            - "--device"
            - "pulse"
            - "--debug"
  loop: "{{ satellites }}"
  tags: stack

- name: Remove unused packages
  ansible.builtin.apt:
    autoremove: true
    purge: true

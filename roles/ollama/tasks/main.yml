- name: Create volume
  community.docker.docker_volume:
    name: ollama_data

- name: Create temporary build directory
  ansible.builtin.tempfile:
    state: directory
    suffix: ollama_build
  register: build_dir

- name: Copy Dockerfile to build directory
  ansible.builtin.copy:
    src: "{{ role_path }}/Dockerfile.mcp-proxy"
    dest: "{{ build_dir.path }}/Dockerfile.mcp-proxy"
    mode: '0644'

- name: Start core AI containers
  community.docker.docker_compose_v2:
    project_name: ai-core
    pull: always
    build: always
    state: present
    definition:
      services:
        ollama-service:
          image: ollama/ollama
          container_name: ollama
          restart: unless-stopped
          ports:
            - "11435:11434"
          environment:
            OLLAMA_DEBUG: "1"
            OLLAMA_NUM_PARALLEL: "2"
            OLLAMA_MAX_LOADED_MODELS: "2"
          volumes:
            - ollama_data:/root/.ollama
          labels:
            wud.tag.include: '^\d+\.\d+\.\d+$$'
        open-webui:
          image: ghcr.io/open-webui/open-webui:main
          container_name: open-webui
          restart: unless-stopped
          environment:
            OLLAMA_BASE_URL: "http://ollama-raw.lan:11434"
          volumes:
            - open-webui:/app/backend/data
          ports:
            - "{{ open_webui_http_port }}:8080"
          labels:
            wud.tag.include: 'main'
            wud.watch.digest: 'true'
            homepage.group: "{{ services['open-webui'].group }}"
            homepage.name: "{{ services['open-webui'].name }}"
            homepage.href: "https://ollama.lan"
            homepage.icon: openai.png
            homepage.server: "{{ inventory_hostname }}"
            homepage.container: open-webui
      volumes:
        ollama_data:
          external: true
        open-webui: {}

- name: Deploy MCP proxy services
  community.docker.docker_compose_v2:
    project_name: ai-mcp
    build: always
    pull: always
    state: present
    definition:
      services:
        service:
          name: "{{ item.name }}"
          image: mcp-base:latest
          build:
            context: "{{ build_dir.path }}"
            dockerfile: Dockerfile.mcp-proxy
          container_name: "{{ item.name }}"
          restart: unless-stopped
          command: "{{ item.command }}"
          environment: "{{ item.environment | default({}) }}"
          ports: "{{ item.ports }}"
  loop: "{{ mcp_services }}"
  loop_control:
    label: "{{ item.name }}"

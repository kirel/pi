- name: Allow conbee with non-root user
  template:
    src: 50-ttyacm.rules
    dest: /etc/udev/rules.d/50-ttyacm.rules
    owner: root
    group: root
  notify: reload udev rules

- name: create config folders
  file: path={{item}} state=directory owner={{username}}
  with_items:
  - "{{homeassistant_config_folder}}"
  - "{{frigate_config_folder}}"
  - "{{frigate_media_folder}}"
  - "{{vscode_config_folder}}"
  - "{{nodered_config_folder}}"
  - "{{mosquitto_config_folder}}"
  - "{{mosquitto_data_folder}}"
  - "{{mosquitto_log_folder}}"
  - "{{zigbee2mqtt_data_folder}}"
  - "{{piper_data_folder}}"
  - "{{whisper_data_folder}}"

- name: Add mosquitto config
  template:
    src: mosquitto.conf
    dest: "{{mosquitto_config_folder}}/mosquitto.conf"
    owner: "{{username}}"
    group: users
  # notify: reload mosquitto

- name: Add z2m config
  template:
    src: configuration.yaml
    dest: "{{zigbee2mqtt_data_folder}}/configuration.yaml"
    owner: "{{username}}"
    group: users

- name: Add frigate config
  template:
    src: frigate.yml
    dest: "{{frigate_config_folder}}/config.yml"
    owner: "{{username}}"
    group: users

- name: Istall git
  apt:
    name: git
    state: latest

- name: Istall bluez
  apt:
    name: bluez
    state: latest

- name: Checkout ha docker venv hack
  ansible.builtin.git:
    repo: 'https://github.com/tribut/homeassistant-docker-venv'
    dest: "{{homeassistant_config_folder}}/docker"
    force: yes
  become: yes
  become_user: "{{username}}"

- name: Reposess config folders
  ansible.builtin.file:
    path: "{{item}}"
    owner: "{{username}}"
    group: users
    mode: u=rwx,g=rwxs
    recurse: yes
  with_items:
  - "{{homeassistant_config_folder}}"
  - "{{frigate_config_folder}}"
  - "{{frigate_media_folder}}"
  - "{{vscode_config_folder}}"
  - "{{nodered_config_folder}}"
  - "{{mosquitto_config_folder}}"
  - "{{mosquitto_data_folder}}"
  - "{{mosquitto_log_folder}}"
  - "{{openwakeword_data_folder}}"
  - "{{piper_data_folder}}"
  - "{{whisper_data_folder}}"

- name: Create ha network
  docker_network:
    name: ha
    state: present

- name: Start home assistant
  community.docker.docker_compose_v2:
    project_name: ha
    pull: always
    definition:
      networks:
        ha:
          external: true
      services:
        homeassistant:
          container_name: homeassistant
          image: "ghcr.io/home-assistant/home-assistant:stable"
          volumes:
            - "{{homeassistant_config_folder}}:/config"
            - "{{homeassistant_config_folder}}/docker/run:/etc/services.d/home-assistant/run"
            - "{{homeassistant_media_folder}}:/media"
            - /etc/localtime:/etc/localtime:ro
            - /run/dbus:/run/dbus:ro
          restart: unless-stopped
          privileged: true
          network_mode: host
          dns:
            - "{{ nameserver_pi_ip }}"
            - "{{ homelab_nuc_ip }}"          
          #devices:
          #  - /dev/ttyACM0 # zigbee coordinator - z2m uses this
          environment:
            - PUID={{uid}}
            - PGID={{uid}}
            - UMASK=007
          labels:
            - 'wud.tag.include=^\d+\.\d+\.\d+$$'
            - 'wud.link.template=https://github.com/home-assistant/core/releases/tag/$${major}.$${minor}.$${patch}'
            - "homepage.group={{services.homeassistant.group}}"
            - "homepage.name={{services.homeassistant.name}}"
            - "homepage.href=https://homeassistant.lan"
            - "homepage.icon=home-assistant.png"
            - "homepage.server={{ inventory_hostname }}"
            - "homepage.container=homeassistant"
        code-server:
          image: lscr.io/linuxserver/code-server
          container_name: code-server
          environment:
            - PUID={{uid}}
            - PGID={{uid}}
            - TZ=Europe/Berlin
            - UMASK=007
            #- PROXY_DOMAIN=code-server.my.domain #optional
            #- DEFAULT_WORKSPACE=/config/workspace #optional
          volumes:
            - "{{vscode_config_folder}}:/config"
            - "{{homeassistant_config_folder}}:/config/workspace"
          ports:
            - 8443:8443
          security_opt:
            - seccomp:unconfined # because strange PI issue see https://stackoverflow.com/questions/69775057/docker-image-fails-to-run-on-raspberry-pi-with-strange-node-error
          restart: unless-stopped
          labels:
            - 'wud.tag.include=latest'
            - 'wud.watch.digest=true'
            - "homepage.group={{services.vscode.group}}"
            - "homepage.name={{services.vscode.name}}"
            - "homepage.href=https://vscode.lan"
            - "homepage.icon=vscode.png"
            - "homepage.server={{ inventory_hostname }}"
            - "homepage.container=code-server"
        # nodered:
        #   container_name: nodered
        #   image: nodered/node-red
        #   ports:
        #     - "{{nodered_http_port}}:1880"
        #   volumes:
        #     - "{{nodered_config_folder}}:/data"
        #   depends_on:
        #     - homeassistant
        #   environment:
        #     TZ: "Europe/Amsterdam"
        #   user: "{{ha_user.uid}}:{{ha_user.group}}"
        #   restart: unless-stopped
        mosquitto:
          container_name: mosquitto
          image: eclipse-mosquitto:latest
          user: "{{uid}}:{{uid}}"
          ports:
            - "{{mosquitto_port}}:1883"
            - "{{mosquitto_websockets_port}}:9001"
          volumes:
            - "{{mosquitto_config_folder}}/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro"
            - "{{mosquitto_data_folder}}:/mosquitto/data"
            - "{{mosquitto_log_folder}}:/mosquitto/log"
          restart: unless-stopped
          labels:
            - 'wud.tag.include=latest'
            - 'wud.watch.digest=true'
        zigbee2mqtt:
          container_name: zigbee2mqtt
          image: koenkk/zigbee2mqtt:latest
          user: "{{uid}}:{{uid}}"
          group_add:
            - dialout
          volumes:
            - "{{zigbee2mqtt_data_folder}}:/app/data"
            - /run/udev:/run/udev:ro
          ports:
            - "{{z2m_http_port}}:8080"
          environment:
            - TZ=Europe/Berlin
          devices:
            - /dev/ttyUSB0:/dev/ttyACM1
          restart: always
          labels:
            - 'wud.tag.include=latest'
            - 'wud.watch.digest=true'
            - "homepage.group={{services.z2m.group}}"
            - "homepage.name={{services.z2m.name}}"
            - "homepage.href=https://z2m.lan"
            - "homepage.icon=mdi-zigbee"
            - "homepage.server={{ inventory_hostname }}"
            - "homepage.container=zigbee2mqtt"

        frigate:
          container_name: frigate
          privileged: true # this may not be necessary for all setups
          restart: unless-stopped
          image: ghcr.io/blakeblackshear/frigate:stable
          shm_size: "64mb" # update for your cameras based on calculation above
          devices:
            - /dev/bus/usb:/dev/bus/usb
          volumes:
            - /etc/localtime:/etc/localtime:ro
            - "{{frigate_config_folder}}:/config"
            - "{{frigate_media_folder}}:/media/frigate"
            - type: tmpfs # Optional: 1GB of memory, reduces SSD/SD Card wear
              target: /tmp/cache
              tmpfs:
                size: 1000000000
          ports:
            - "{{frigate_http_port}}:5000"
            - "8554:8554" # RTSP feeds
            - "8555:8555/tcp" # WebRTC over tcp
            - "8555:8555/udp" # WebRTC over udp
          environment:
            FRIGATE_RTSP_PASSWORD: "password"
          labels:
            - 'wud.tag.include=^\d+\.\d+\.\d+$$'
            - 'wud.link.template=https://github.com/blakeblackshear/frigate/releases/tag/$${major}.$${minor}.$${patch}'
            - "homepage.group={{services.frigate.group}}"
            - "homepage.name={{services.frigate.name}}"
            - "homepage.href=https://frigate.lan"
            - "homepage.icon=frigate.png"
            - "homepage.server={{ inventory_hostname }}"
            - "homepage.container=frigate"
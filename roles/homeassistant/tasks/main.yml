- name: Allow conbee with non-root user
  template:
    src: 50-ttyacm.rules
    dest: /etc/udev/rules.d/50-ttyacm.rules
    owner: root
    group: root
  notify: reload udev rules

- name: create folder config folders
  file: path={{item}} state=directory owner={{username}}
  with_items:
  - "{{homeassistant_config_folder}}"
  - "{{vscode_config_folder}}"
  - "{{nodered_config_folder}}"
  - "{{mosquitto_config_folder}}"
  - "{{mosquitto_data_folder}}"
  - "{{mosquitto_log_folder}}"
  - "{{zigbee2mqtt_data_folder}}"

- name: Add mosquitto config
  template:
    src: mosquitto.conf
    dest: "{{mosquitto_config_folder}}/mosquitto.conf"
    owner: "{{username}}"
    group: users
  # notify: reload mosquitto

- name: Add z2m config
  template:
    src: configuration.yaml
    dest: "{{zigbee2mqtt_data_folder}}/configuration.yaml"
    owner: "{{username}}"
    group: users

- name: Istall git
  apt:
    name: git
    state: latest

- name: Istall bluez
  apt:
    name: bluez
    state: latest

- name: Checkout ha docker venv hack
  ansible.builtin.git:
    repo: 'https://github.com/tribut/homeassistant-docker-venv'
    dest: "{{homeassistant_config_folder}}/docker"
    force: yes
  become: yes
  become_user: "{{username}}"

- name: Reposess config folders
  ansible.builtin.file:
    path: "{{item}}"
    owner: "{{username}}"
    group: users
    mode: u=rwx,g=rwxs
    recurse: yes
  with_items:
  - "{{homeassistant_config_folder}}"
  - "{{vscode_config_folder}}"
  - "{{nodered_config_folder}}"
  - "{{mosquitto_config_folder}}"
  - "{{mosquitto_data_folder}}"
  - "{{mosquitto_log_folder}}"

- name: Start home assistant
  community.docker.docker_compose:
    project_name: ha
    pull: yes
    definition:
      version: '3'
      services:
        homeassistant:
          container_name: homeassistant
          image: "ghcr.io/home-assistant/home-assistant:stable"
          volumes:
            - "{{homeassistant_config_folder}}:/config"
            - "{{homeassistant_config_folder}}/docker/run:/etc/services.d/home-assistant/run"
            - "{{homeassistant_media_folder}}:/media"
            - /etc/localtime:/etc/localtime:ro
            - /run/dbus:/run/dbus:ro
          restart: unless-stopped
          privileged: true
          network_mode: host
          devices:
            - /dev/ttyACM0
          environment:
            - PUID={{uid}}
            - PGID={{uid}}
            - UMASK=007
        shortumation:
          container_name: shortumation
          image: "asosnovsky/shortumation-amd64:latest"
          volumes:
            - "{{homeassistant_config_folder}}:/config"
          extra_hosts:
            - "host.docker.internal:host-gateway"
          environment:
            - "SUPERVISOR_TOKEN={{ha_access_token}}"
            - HASSIO_WS=wss://host.docker.internal:8123/api/websocket
          ports:
            - "{{shortumation_http_port}}:8000"
        code-server:
          image: lscr.io/linuxserver/code-server
          container_name: code-server
          environment:
            - PUID={{uid}}
            - PGID={{uid}}
            - TZ=Europe/London
            - UMASK=007
            #- PROXY_DOMAIN=code-server.my.domain #optional
            #- DEFAULT_WORKSPACE=/config/workspace #optional
          volumes:
            - "{{vscode_config_folder}}:/config"
            - "{{homeassistant_config_folder}}:/config/workspace"
          ports:
            - 8443:8443
          security_opt:
            - seccomp:unconfined # because strange PI issue see https://stackoverflow.com/questions/69775057/docker-image-fails-to-run-on-raspberry-pi-with-strange-node-error
          restart: unless-stopped
        # nodered:
        #   container_name: nodered
        #   image: nodered/node-red
        #   ports:
        #     - "{{nodered_http_port}}:1880"
        #   volumes:
        #     - "{{nodered_config_folder}}:/data"
        #   depends_on:
        #     - homeassistant
        #   environment:
        #     TZ: "Europe/Amsterdam"
        #   user: "{{ha_user.uid}}:{{ha_user.group}}"
        #   restart: unless-stopped
        mosquitto:
          container_name: mosquitto
          image: eclipse-mosquitto
          user: "{{uid}}:{{uid}}"
          ports:
            - "{{mosquitto_port}}:1883"
            - "{{mosquitto_websockets_port}}:9001"
          volumes:
            - "{{mosquitto_config_folder}}/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro"
            - "{{mosquitto_data_folder}}:/mosquitto/data"
            - "{{mosquitto_log_folder}}:/mosquitto/log"
          restart: unless-stopped
        zigbee2mqtt:
          container_name: zigbee2mqtt
          image: koenkk/zigbee2mqtt
          restart: unless-stopped
          user: "{{uid}}:{{uid}}"
          group_add:
            - dialout
          volumes:
            - "{{zigbee2mqtt_data_folder}}:/app/data"
            - /run/udev:/run/udev:ro
          ports:
            - "{{z2m_http_port}}:8080"
          environment:
            - TZ=Europe/Berlin
          devices:
            - /dev/ttyUSB0:/dev/ttyACM1
  register: output

- #ansible.builtin.debug:
  #  var: output

- ansible.builtin.assert:
    that:
      - "output.services.homeassistant.homeassistant.state.running"
      - "output.services.mosquitto.mosquitto.state.running"
      #- "output.services.nodered.nodered.state.running"


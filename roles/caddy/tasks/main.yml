- name: create folder config folders
  file: path={{item}} state=directory owner={{username}}
  with_items:
  - "{{caddy_folder}}"
  - "{{caddy_data_folder}}"
  - "{{caddy_config_folder}}"

- name: Reposess config folders
  ansible.builtin.file:
    path: "{{item}}"
    owner: "{{username}}"
    group: users
    mode: u=rwx,g=rwxs
    recurse: yes
  with_items:
  - "{{caddy_folder}}"
  - "{{caddy_data_folder}}"
  - "{{caddy_config_folder}}"

- name: copy Caddyfile
  template:
    src: Caddyfile.j2
    dest: "{{caddy_folder}}/Caddyfile"
    owner: "{{username}}"
  register: caddyfile

- name: copy Dockerfile
  template:
    src: Dockerfile
    dest: "{{caddy_folder}}/Dockerfile"
    owner: "{{username}}"
  register: dockerfile

- name: Start caddy
  community.docker.docker_compose_v2:
    project_name: caddy
    pull: "always"  # or "missing", "never", "policy" based on your needs
    build: "policy"  # or "always", "never"
    state: present  # Ensure the services are started
    definition:
      version: '3'
      networks:
        homepage:
          external: true
        pihole_backend:
          external: true
      services:
        caddy:
          container_name: caddy
          build:
            context: "{{ caddy_folder }}"
            dockerfile: "{{ caddy_folder }}/Dockerfile"
          restart: unless-stopped
          user: "{{ uid }}:{{ uid }}"
          dns:
            - 172.31.0.100
            - 1.1.1.1
            - 1.0.0.1
          ports:
            - "80:80"
            - "443:443"
            - "11434:11434"
          volumes:
            - "{{ caddy_folder }}/Caddyfile:/etc/caddy/Caddyfile"
            - "{{ caddy_data_folder }}:/data"
            - "{{ caddy_config_folder }}:/config"
          environment:
            CADDY_ADMIN: "0.0.0.0:2019"
          cap_add:
            - NET_ADMIN
          networks:
            - homepage
            - pihole_backend
          labels:
            - 'wud.tag.include=latest'
            - 'wud.watch.digest=true'
            - "homepage.group=Network"
            - "homepage.name=Caddy"
            - "homepage.icon=mdi-server"
            - "homepage.server={{ inventory_hostname }}"
            - "homepage.container=caddy"
            - "homepage.widget.type=caddy"
            - "homepage.widget.url=http://caddy:2019"


  register: output

- ansible.builtin.debug:
    var: output

-  ansible.builtin.assert:
    that:
      - output.containers | selectattr('Name', 'equalto', 'caddy') | list | length > 0
      - output.containers | selectattr('Name', 'equalto', 'caddy') | map(attribute='State') | list | first == 'running'


- name: copy root certificate
  shell: "docker cp caddy:/data/caddy/pki/authorities/local/root.crt {{caddy_folder}}/root.crt"
- fetch: 
    src: "{{caddy_folder}}/root.crt"
    dest: tmp/
    flat: yes

- name: Reposess root cert
  ansible.builtin.file:
    path: "{{caddy_folder}}/root.crt"
    owner: "{{ username }}"
    group: users
    mode: u=rw,g=rw
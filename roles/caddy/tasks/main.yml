- name: create folder config folders
  file: path={{item}} state=directory owner={{username}}
  with_items:
  - "{{caddy_folder}}"
  - "{{caddy_data_folder}}"
  - "{{caddy_config_folder}}"

- name: Reposess config folders
  ansible.builtin.file:
    path: "{{item}}"
    owner: "{{username}}"
    group: users
    mode: u=rwx,g=rwxs
    recurse: yes
  with_items:
  - "{{caddy_folder}}"
  - "{{caddy_data_folder}}"
  - "{{caddy_config_folder}}"


- name: copy Caddyfile
  template:
    src: Caddyfile
    dest: "{{caddy_folder}}/Caddyfile"
    owner: "{{username}}"
  notify: reload caddy config

# reload config via
# docker exec -w /etc/caddy caddy caddy reload

- name: Start caddy
  community.docker.docker_compose:
    project_name: caddy
    pull: yes
    definition:
      version: '3'
      services:
        caddy:
          container_name: caddy
          image: caddy:latest
          restart: unless-stopped
          user: "{{uid}}:{{uid}}"
          dns:
            - 1.1.1.1
            - 1.0.0.1
          ports:
            - "80:80"
            - "443:443"
          volumes:
            - "{{caddy_folder}}/Caddyfile:/etc/caddy/Caddyfile"
            - "{{caddy_data_folder}}:/data"
            - "{{caddy_config_folder}}:/config"
          labels:
            - 'wud.tag.include=latest'
            - 'wud.watch.digest=true'
  register: output

- ansible.builtin.debug:
    var: output

- ansible.builtin.assert:
    that:
      - "output.services.caddy.caddy.state.running"

- name: copy root certificate
  shell: "docker cp caddy:/data/caddy/pki/authorities/local/root.crt {{caddy_folder}}/root.crt"
- fetch: 
    src: "{{caddy_folder}}/root.crt"
    dest: tmp/
    flat: yes

- name: Reposess root cert
  ansible.builtin.file:
    path: "{{caddy_folder}}/root.crt"
    owner: "{{ username }}"
    group: users
    mode: u=rw,g=rw
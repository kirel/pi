{
        email danishkirel@gmail.com
        order wake_on_lan before respond
        log {
                output stdout
        }
}

danishkirel.asuscomm.com {
        reverse_proxy {{ homelab_nuc_ip }}:{{ homeassistant_http_port }}
        log
}

{% for service, props in services.items() %}
{% if props.tls_skip | default(false) %}http://{% endif %}{{ props.domain|default(service ~ ".lan") }}{% if props.proxy_port is defined %}:{{ props.proxy_port }}{% endif %} {
        reverse_proxy {% if props.tls_skip | default(false) %}http://{% endif %}{{ props.target }}:{{ props.http_port }}
        {% if not props.tls_skip | default(false) %}
        tls internal
        {% endif %}
        log
        {% if props.wol is defined %}
        handle_errors {
                @502 expression {err.status_code} == 502
                handle @502 {
                        # Add custom fields to the log entry generated when this error handler runs
                        log_append wol_triggered "true"
                        log_append wol_target "{{ props.target }}"
                        log_append wol_mac "{{ props.wol }}"
                        log_append wol_triggering_request "{http.request.method} {http.request.uri} from {http.request.remote.ip}"
                        log_append wol_error_status "{err.status_code}"

                        wake_on_lan {{ props.wol }} # MAC address from service definition
                        reverse_proxy {% if props.tls_skip | default(false) %}http://{% endif %}{{ props.target }}:{{ props.http_port }} {
                                lb_try_duration {{ props.try | default('60s') }}
                        }
                }
        }
        {% endif %}
}
{% endfor %}

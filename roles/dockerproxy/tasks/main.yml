
- name: Create network
  docker_network:
    name: dockerproxy
    state: present

- name: Start dockerproxy
  community.docker.docker_compose_v2:
    project_name: dockerproxy
    pull: "always"  # Set to "always", "missing", "never", or "policy" based on your needs
    state: present  # Ensure the services are started
    definition:
      networks:
        dockerproxy:
          external: true
      services:
        dockerproxy:
          image: ghcr.io/tecnativa/docker-socket-proxy:latest
          container_name: dockerproxy
          environment:
            LOG_LEVEL: debug
            POST: "1"
            CONTAINERS: "1"
            IMAGES: "1"
            INFO: "1"
            NETWORKS: "1"
            SERVICES: "1"
            TASKS: "1"
            VOLUMES: "1"
            DISABLE_IPV6: "0"
          ports:
            - "2375:2375"
          networks:
            - dockerproxy
          volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro  # Mounted as read-only
          restart: unless-stopped
  register: output


-  ansible.builtin.debug:
    var: output  # Print the entire output variable to understand its structure

-  ansible.builtin.assert:
    that:
      - output.containers | selectattr('Name', 'equalto', 'dockerproxy') | list | length > 0  # Ensure the container exists
      - output.containers | selectattr('Name', 'equalto', 'dockerproxy') | map(attribute='State') | list | first == 'running'  # Check if the container is running
